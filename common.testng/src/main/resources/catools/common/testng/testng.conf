catools {
  core {
    // Whether we should perform only data setup
    data_setup_enable = false
    data_setup_enable = ${?CATOOLS_CORE_DATA_SETUP_ENABLE}

    // Whether we should call cleanup method if test fail
    cleanup_mode_enable = false
    cleanup_mode_enable = ${?CATOOLS_CORE_CLEANUP_MODE}

    // Whether we should save configuration data on disk during run
    local_storage_enable = true
    local_storage_enable = ${?CATOOLS_CORE_LOCAL_STORAGE_ENABLE}

    // If this run is Release test execution
    release_mode_enable = false
    release_mode_enable = ${?CATOOLS_CORE_RELEASE_MODE}

    // If this run is Production test execution
    production_mode_enable = false
    production_mode_enable = ${?CATOOLS_CORE_PRODUCTION_MODE}
  }

  testng {
    parallel {
      test_level {
        parallel_mode = "CLASSES"
        parallel_mode = ${?TESTNG_TEST_PARALLEL_LEVEL_PARALLEL_MODE}

        thread_count = 1
        thread_count = ${?TESTNG_TEST_PARALLEL_LEVEL_PARALLEL_THREAD_COUNT}
      }

      suite_level {
        parallel_mode = "TESTS"
        parallel_mode = ${?TESTNG_SUITE_PARALLEL_LEVEL_PARALLEL_MODE}

        thread_count = 1
        thread_count = ${?TESTNG_SUITE_PARALLEL_LEVEL_PARALLEL_THREAD_COUNT}
      }
    }
    // List root packages which contains test classes comma separated
    test_packages = ""
    test_packages = ${?CATOOLS_TESTNG_TEST_PACKAGES}

    // Thread count for console test execution
    thread_count = 1
    thread_count = ${?CATOOLS_TESTNG_THREAD_COUNT}

    // TestNG Listeners
    listeners.general = ""
    listeners.general = ${?CATOOLS_TESTNG_LISTENERS}

    // Class qualified name which should be used for class loader
    base_test_class_loader = CTest
    base_test_class_loader = ${?CATOOLS_TESTNG_BASE_TEST_CLASS_LOADER}

    // Number of retry after each test execution if test fail
    test_retry_count = 0
    test_retry_count = ${?CATOOLS_TESTNG_TEST_RETRY_COUNT}

    // Number of retry after each suite execution for fail tests if there are any
    suite_retry_count = 0
    suite_retry_count = ${?CATOOLS_TESTNG_SUITE_RETRY_COUNT}

    // Whether we should all tests in class if it has one or more Awaiting test
    skip_class_with_awaiting_test = false
    skip_class_with_awaiting_test = ${?CATOOLS_TESTNG_SKIP_CLASS_WITH_AWAITING_TEST}

    // Whether we should all tests in class if it has one or more Ignored test
    skip_class_with_ignored_test = false
    skip_class_with_ignored_test = ${?CATOOLS_TESTNG_SKIP_CLASS_WITH_IGNORED_TEST}

    // Define the severity level for current run.
    run_severity_level = -1
    run_severity_level = ${?CATOOLS_TESTNG_RUN_SEVERITY_LEVEL}

    // Define the regression depth for current run.
    run_regression_depth = -1
    run_regression_depth = ${?CATOOLS_TESTNG_RUN_REGRESSION_DEPTH}

    // List of annotation names for which test should be ignored if any of them match the test labels (Comma Separated)
    ignore_test_with_any_annotation = []
    ignore_test_with_any_annotation = ${?CATOOLS_TESTNG_IGNORE_TEST_WITH_ANY_ANNOTATION}

    // List of annotation names for which test should be ignored if all of them match the test labels (Comma Separated)
    ignore_test_with_all_annotation = []
    ignore_test_with_all_annotation = ${?CATOOLS_TESTNG_IGNORE_TEST_WITH_ALL_ANNOTATION}

    // List of annotation names for which test should be run when any match the test labels (Comma Separated)
    run_test_with_all_annotations = []
    run_test_with_all_annotations = ${?CATOOLS_TESTNG_RUN_TEST_WITH_ALL_ANNOTATIONS}

    // List of annotation names for which test should be run when all match the test labels (Comma Separated)
    run_test_with_any_annotations = []
    run_test_with_any_annotations = ${?CATOOLS_TESTNG_RUN_TEST_WITH_ANY_ANNOTATIONS}

    result_xml_name = "cat-testng-results.xml"
    result_xml_name = ${?CATOOLS_TESTNG_RESULT_XML_NAME}
  }
}